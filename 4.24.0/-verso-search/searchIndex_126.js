window.docContents[126].resolve({"/The-Type-System/Functions/#currying":{"contents":"In Lean's core type theory, every function maps each element of the domain to a single element of the codomain.\nIn other words, every function expects exactly one parameter.\nMultiple-parameter functions are implemented by defining higher-order functions that, when supplied with the first parameter, return a new function that expects the remaining parameters.\nThis encoding is called currying, popularized by and named after Haskell B. Curry.\nLean's syntax for defining functions, specifying their types, and applying them creates the illusion of multiple-parameter functions, but the result of elaboration contains only single-parameter functions.\n\n","context":"Lean Reference\u0009Type System\u0009Functions","header":"4.1.2. Currying","id":"/The-Type-System/Functions/#currying"}});