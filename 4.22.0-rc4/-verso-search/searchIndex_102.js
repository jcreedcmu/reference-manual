window.docContents[102].resolve({"/Tactic-Proofs/Reading-Proof-States/#metavariables-in-proofs":{"id":"/Tactic-Proofs/Reading-Proof-States/#metavariables-in-proofs","header":"13.2.2. Metavariables","context":"Lean Reference\u0009Tactic Proofs\u0009Reading Proof States","contents":"Terms that begin with a question mark are metavariables that correspond to an unknown value.\nThey may stand for either universe levels or for terms.\nSome metavariables arise as part of Lean's elaboration process, when not enough information is yet available to determine a value.\nThese metavariables' names have a numeric component at the end, such as ?m.392 or ?u.498.\nOther metavariables come into existence as a result of tactics or synthetic holes.\nThese metavariables' names do not have a numeric component.\nMetavariables that result from tactics frequently appear as goals whose case labels match the name of the metavariable.\n\nUniverse Level MetavariablesIn this proof state, the universe level of α is unknown:α : Type ?u.9786\nx : α\nxs : List α\nelem : x ∈ xs\n⊢ xs.length > 0\n\nType MetavariablesIn this proof state, the type of list elements is unknown.\nThe metavariable is repeated because the unknown type must be the same in both positions.x : ?m.10149\nxs : List ?m.10149\nelem : x ∈ xs\n⊢ xs.length > 0\n\nMetavariables in ProofsIn this proof state,i j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ i < k\napplying the tactic apply Nat.lt_trans results in the following proof state, in which the middle value of the transitivity step ?m is unknown:case h₁\ni j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ i < ?m\n\ncase a\ni j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ ?m < k\n\ncase m\ni j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ Nat\n\n\nExplicitly-Created MetavariablesExplicit named holes are represented by metavariables, and additionally give rise to proof goals.\nIn this proof state,i j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ i < k\napplying the tactic apply @Nat.lt_trans i ?middle k ?p1 ?p2 results in the following proof state, in which the middle value of the transitivity step ?middle is unknown and goals have been created for each of the named holes in the term:case middle\ni j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ Nat\n\ncase p1\ni j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ i < ?middle\n\ncase p2\ni j k : Nat\nh1 : i < j\nh2 : j < k\n⊢ ?middle < k\n\n\nThe display of metavariable numbers can be disabled using the pp.mvars.\nThis can be useful when using features such as #guard_msgs that match Lean's output against a desired string, which is very useful when writing tests for custom tactics.\n\n(pretty printer) display names of metavariables when true, and otherwise display them as '?' (for expression metavariables) and as '' (for universe level metavariables)\n\n\n\n"},"/Basic-Types/Linked-Lists/#list-api-reference":{"id":"/Basic-Types/Linked-Lists/#list-api-reference","header":"19.15.3. API Reference","context":"Lean Reference\u0009Basic Types\u0009Linked Lists","contents":"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}});