window.docContents[60].resolve({"/The-Simplifier/Simp-sets/#simp-sets":{"id":"/The-Simplifier/Simp-sets/#simp-sets","header":"16.3. Simp sets","context":"Lean Reference\u0009The Simplifier","contents":"A collection of rules used by the simplifier is called a simp set.\nA simp set is specified in terms of modifications from a default simp set.\nThese modifications can include adding rules, removing rules, or adding a set of rules.\nThe only modifier to the simp tactic causes it to start with an empty simp set, rather than the default one.\nRules are added to the default simp set using the simp attribute.\n\nRegistering simp LemmasThe simp attribute adds a declaration to the default simp set.\nIf the declaration is a definition, the definition is marked for unfolding; if it is a theorem, then the theorem is registered as a rewrite rule.\n\nCustom simp sets are created with registerSimpAttr, which must be run during initialization by placing it in an initialize block.\nAs a side effect, it creates a new attribute with the same interface as simp that adds rules to the custom simp set.\nThe returned value is a SimpExtension, which can be used to programmatically access the contents of the custom simp set.\nThe simp tactics can be instructed to use the new simp set by including its attribute name in the rule list.\n\nRegisters the given name as a custom simp set. Applying the name as an attribute to a name adds it\nto the simp set, and using the name as a parameter to the simp tactic causes simp to use the\nincluded lemmas.Custom simp sets must be registered during initialization.The description should be a short, singular noun phrase that describes the contents of the custom\nsimp set.\n\nThe environment extension that contains a simp set, returned by Lean.Meta.registerSimpAttr.Use the simp set's attribute or Lean.Meta.addSimpTheorem to add theorems to the simp set. Use\nLean.Meta.SimpExtension.getTheorems to get the contents.\n\n"},"/Basic-Types/Maps-and-Sets/#The-Lean-Language-Reference--Basic-Types--Maps-and-Sets--Tree-Based-Maps--Properties":{"id":"/Basic-Types/Maps-and-Sets/#The-Lean-Language-Reference--Basic-Types--Maps-and-Sets--Tree-Based-Maps--Properties","header":"19.17.8.2. Properties","context":"Lean Reference\u0009Basic Types\u0009Maps and Sets\u0009Tree-Based Maps","contents":"Returns the number of mappings present in the map.\n\nReturns true if the tree map contains no mappings.\n\n"}});