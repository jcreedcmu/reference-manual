window.docContents[217].resolve({"/Notations-and-Macros/Macros/#macro-attribute":{"id":"/Notations-and-Macros/Macros/#macro-attribute","header":"20.5.5.3. The Macro Attribute","context":"Lean Reference\u0009Notations and Macros\u0009Macros\u0009Defining Macros","contents":"Macros can be manually added to a syntax kind using the macro attribute.\nThis low-level means of specifying macros is typically not useful, except as a result of code generation by macros that themselves generate macro definitions.\n\nThe macro AttributeThe macro attribute specifies that a function is to be considered a macro for the specified syntax kind.\n\nThe Macro Attribute/-- Generate a list based on N syntactic copies of a term -/\nsyntax (name := rep) \"[\" num \" !!! \" term \"]\" : term\n\n@[macro rep]\ndef expandRep : Macro\n  | `([ $n:num !!! $e:term]) =>\n    let e' := Array.mkArray n.getNat e\n    `([$e',*])\n  | _ =>\n    throwUnsupported\nEvaluating this new expression demonstrates that the macro is present.#eval [3 !!! \"hello\"]\n[\"hello\", \"hello\", \"hello\"]\n\n\n"},"/Basic-Types/Characters/#char-api":{"id":"/Basic-Types/Characters/#char-api","header":"19.7.4. API Reference","context":"Lean Reference\u0009Basic Types\u0009Characters","contents":"\n\n\n\n\n\n\n\n\n\n"}});