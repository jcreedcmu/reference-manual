window.docContents[52].resolve({"/the-index/#The-Lean-Language-Reference--Index":{"id":"/the-index/#The-Lean-Language-Reference--Index","header":"Index","context":"Lean Reference","contents":"\n\n"},"/Basic-Types/Integers/#int-syntax":{"id":"/Basic-Types/Integers/#int-syntax","header":"19.2.3. Syntax","context":"Lean Reference\u0009Basic Types\u0009Integers","contents":"\n\nThe OfNat Int instance allows numerals to be used as literals, both in expression and in pattern contexts.\n(OfNat.ofNat n : Int) reduces to the constructor application Int.ofNat n.\nThe Neg Int instance allows negation to be used as well.\n\n\n\nOn top of these instances, there is special syntax for the constructor Int.negSucc that is available when the Int namespace is opened.\nThe notation -[ n +1] is suggestive of -(n + 1), which is the meaning of Int.negSucc n.\n\nNegative Successor-[ n +1] is notation for Int.negSucc n.\n\n\n\n"},"/Basic-Types/Floating-Point-Numbers/#The-Lean-Language-Reference--Basic-Types--Floating-Point-Numbers--API-Reference--Arithmetic--Roots":{"id":"/Basic-Types/Floating-Point-Numbers/#The-Lean-Language-Reference--Basic-Types--Floating-Point-Numbers--API-Reference--Arithmetic--Roots","header":"19.6.2.5.1. Roots","context":"Lean Reference\u0009Basic Types\u0009Floating-Point Numbers\u0009API Reference\u0009Arithmetic","contents":"Computing the square root of a negative number yields NaN.\n\nComputes the square root of a floating-point number.This function does not reduce in the kernel. It is implemented in compiled code by the C function\nsqrt.\n\nComputes the square root of a floating-point number.This function does not reduce in the kernel. It is implemented in compiled code by the C function\nsqrtf.\n\nComputes the cube root of a floating-point number.This function does not reduce in the kernel. It is implemented in compiled code by the C function\ncbrt.\n\nComputes the cube root of a floating-point number.This function does not reduce in the kernel. It is implemented in compiled code by the C function\ncbrtf.\n\n"}});