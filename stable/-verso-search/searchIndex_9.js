window.docContents[9].resolve({"/Basic-Types/Sum-Types/#The-Lean-Language-Reference--Basic-Types--Sum-Types--API-Reference--Transformations":{"id":"/Basic-Types/Sum-Types/#The-Lean-Language-Reference--Basic-Types--Sum-Types--API-Reference--Transformations","header":"19.14.2.3. Transformations","context":"Lean Reference\u0009Basic Types\u0009Sum Types\u0009API Reference","contents":"Transforms a sum according to functions on each type.This function maps α ⊕ β to α' ⊕ β', sending α to α' and β to β'.\n\nSwaps the factors of a sum type.The constructor Sum.inl is replaced with Sum.inr, and vice versa.\n\n"},"/Basic-Types/#basic-types":{"id":"/Basic-Types/#basic-types","header":"19. Basic Types","context":"Lean Reference","contents":"Lean includes a number of built-in types that are specially supported by the compiler.\nSome, such as Nat, additionally have special support in the kernel.\nOther types don't have special compiler support per se, but rely in important ways on the internal representation of types for performance reasons.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"}});