window.docContents[76].resolve({"/Basic-Types/Optional-Values/#The-Lean-Language-Reference--Basic-Types--Optional-Values--Coercions":{"contents":"\n\nThere is a coercion from α to Option α that wraps a value in some.\nThis allows Option to be used in a style similar to nullable types in other languages, where values that are missing are indicated by none and values that are present are not specially marked.\n\nCoercions and OptionIn getAlpha, a line of input is read.\nIf the line consists only of letters (after removing whitespace from the beginning and end of it), then it is returned; otherwise, the function returns none.def getAlpha : IO (Option String) := do\n  let line := (← (← IO.getStdin).getLine).trim\n  if line.length > 0 && line.all Char.isAlpha then\n    return line\n  else\n    return none\nIn the successful case, there is no explicit some wrapped around line.\nThe some is automatically inserted by the coercion.\n\n\n\n","context":"Lean Reference\u0009Basic Types\u0009Optional Values","header":"19.12.1. Coercions","id":"/Basic-Types/Optional-Values/#The-Lean-Language-Reference--Basic-Types--Optional-Values--Coercions"}});